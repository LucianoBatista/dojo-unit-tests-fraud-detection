version: '3.8'

services:
  web:
    build:
      context: ./
    image: fraud-detection:latest
    container_name: web
    hostname: web
    volumes:
    - ./:/usr/src/app
    ports:
      - 8010:8000
    environment:
      - APP_NAME=web
      - DATABASE_URL=postgresql+asyncpg://postgres:postgres@db:5432/foo
      - BROKER_URL=amqp://admin:admin@rabbitmq:5672
      - RESULT_BACKEND=redis://:admin@redis:6379/0
    networks:
      - default
    restart: always
    depends_on:
      - db
  
  worker: 
    build:
      context: ./
    volumes: 
      - .:/usr/src/app 
    environment:
      - APP_NAME=worker
      - DATABASE_URL=postgresql+asyncpg://postgres:postgres@db:5432/foo
      - BROKER_URL=amqp://admin:admin@rabbitmq:5672
      - RESULT_BACKEND=redis://:admin@redis:6379/0
    depends_on:
      - web
      - rabbitmq
      - redis
      - db

  db:
    image: postgres:latest
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=foo
    restart: always
  
  rabbitmq:
    image: docker.io/library/rabbitmq:3.8-management-alpine
    container_name: rabbitmq
    hostname: rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=admin
      - RABBITMQ_DEFAULT_PASS=admin
    ports:
    - 5672:5672
    - 15672:15672
    restart: always

  redis:
    image: docker.io/library/redis:5-alpine
    container_name: redis
    hostname: redis
    environment:
      - REDIS_PASSWORD=admin
    entrypoint: /bin/sh
    command: -c 'redis-server --appendonly yes --requirepass $${REDIS_PASSWORD}'
    ports:
    - 6379:6379
    restart: always